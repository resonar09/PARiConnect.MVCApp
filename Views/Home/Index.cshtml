@{
    ViewData["Title"] = "Home Page";
}
@model PARiConnect.MVCApp.ViewModels.HomeIndexViewModel
<div class="row">
    <div class="col-lg-9 col-md-12">
        <div class="col my-4 clearfix">
            <div class="float-left">
                <h4 class="title-1">Welcome to PARiConnect</h4>
            </div>
            <div class="float-right">
                <button class="btn btn-outline-primary btn-lg" type="button" data-toggle="modal" data-target="#exampleModal">
                    <i class="fa fa-user-plus" aria-hidden="true"></i>
                    Add New Client
                </button>
            </div>
        </div>
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" data-toggle="tab" href="#pending" role="tab">Pending Assessments</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#completed" role="tab">Completed Assessments</a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="pending" role="tabpanel">
                <div class="mt-2">
                    @await Component.InvokeAsync("AssessmentReview", new { completed = false })
                </div>
            </div>
            <div class="tab-pane" id="completed" role="tabpanel">
                <div class="mt-2">
                    @await Component.InvokeAsync("AssessmentReview", new { completed = true })
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 par-bg-2 p-2 pt-3 bg-light">
        <div>
            @await Component.InvokeAsync("Notifications", new { completed = true })
        </div>
        <div>
            @await Component.InvokeAsync("RecentlyAccessed", new { completed = true })
        </div>
        <div>
            @Html.Partial("_HelpMenu")
        </div>
    </div>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Add Client</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        @await Component.InvokeAsync("EditClient")
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {

             $.tablesorter.addParser({
                id: 'last-name',
                is: function(s) {
                return false;
                },
                format: function(str) {
                var parts = (str || '').split(/\s+/),
                    last = parts.pop();
                parts.unshift(last);
                return parts.join(' ');
                },
                // set type, either numeric or text
                type: 'text'
            });
            $(".sortable").tablesorter();


            $(".search-input").keyup(function () {

                var value = this.value;
                $(".searchable").find("tr").each(function (index) {
                    //if (index === 0) return;
                    var rowMatch = false;
                    $(this).find("td").each(function (index) {
                        if ($(this).text().toUpperCase().indexOf(value.toUpperCase()) !== -1)
                            rowMatch = true;
                    });
                    $(this).toggle(rowMatch);
                });
            });

            $(".firstLastToggle").click(function(e){
                $(".name-header").toggleClass("sorter-last-name");
                $(".tablesorter").trigger("update");
                if($(".name-header").hasClass("sorter-last-name")){
                    $(".first").text("L");
                    $(".last").text("F");
                }
                else{
                    $(".first").text("F");
                    $(".last").text("L"); 
                }
            });
            $(".searchToggle").click(function(e){
                    $(".search-toggle").toggle();
            });

            $("[data-toggle=popover]").each(function(i, obj) {
                $(this).popover({
                html: true,
                content: function() {
                    var id = $(this).attr('id')
                    //$('#popover-content-' + id).show();
                    return $('#popover-content-' + id).html();
                }
                });
            });

           
        }
        );
    </script>
}
